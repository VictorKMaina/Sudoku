:root {
    --space-unit: 1em;
    --space-xxs: calc(0.25 * var(--space-unit));
    --space-xs: calc(0.5 * var(--space-unit));
    --space-sm: calc(0.75 * var(--space-unit));
    --space-md: calc(1.25 * var(--space-unit));
    --space-lg: calc(2 * var(--space-unit));
    --space-xl: calc(3.25 * var(--space-unit));
    --space-xxl: calc(5.25 * var(--space-unit));

    /* fixed values - not affected by --space-unit or --text-base-size */
    --space-unit-fixed: 1rem;
    --space-xxs-fixed: calc(0.25 * var(--space-unit-fixed));
    --space-xs-fixed: calc(0.5 * var(--space-unit-fixed));
    --space-sm-fixed: calc(0.75 * var(--space-unit-fixed));
    --space-md-fixed: calc(1.25 * var(--space-unit-fixed));
    --space-lg-fixed: calc(2 * var(--space-unit-fixed));
    --space-xl-fixed: calc(3.25 * var(--space-unit-fixed));
    --space-xxl-fixed: calc(5.25 * var(--space-unit-fixed));
}

@media screen and (min-width: 1024px) {
    :root {
        --space-unit: 1.25em;
    }
}

// GENERATE SPACING UTILITY CLASSES
$sizes: ("xxs", "xs", "sm", "md", "lg", "xl", "xxl");

$positions: ("top", "bottom", "left", "right");

// Margin Utility Classes
@each $size in $sizes {
    .margin-#{$size} {
        margin: var(--space-#{$size});
    }
    @each $position in $positions {
        .margin-#{$position}-#{$size} {
            margin-#{$position}: var(--space-#{$size});
        }
    }
}

// Padding Utility Classes
@each $size in $sizes {
    .padding-#{$size} {
        padding: var(--space-#{$size});
    }
    @each $position in $positions {
        .padding-#{$position}-#{$size} {
            padding-#{$position}: var(--space-#{$size});
        }
    }
}
